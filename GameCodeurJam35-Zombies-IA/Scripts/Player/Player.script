function init(self)

	print(go.get_id())
	
	self.entity = newEntity(self, go.get_id(), "player")
	--
	self.position = go.get_position()
	self.velocity = vmath.vector3(0, 0, 0)
	self.speed = 250
end

function final(self)
end

function update(self, dt)
	local dir = {"left","right","up","down", "idle"}
	for n=1, #dir do
		self.entity[dir[n]] = game.controls[dir[n]]
	end
	
	local norm_x, norm_y = game.getVector2Normalise()
	--
	self.velocity = vmath.vector3(norm_x,norm_y,0)
	--
	self.position = self.position + (self.velocity * self.speed * dt)
	go.set_position(self.position)

	-- test msg
	msg.post("/UI_Game#UI_Game", "add_life", {life = 1})
	msg.post("/UI_Game#UI_Game", "add_mana", {mana = 1})
end

function on_message(self, message_id, message, sender)
	--pprint(message)
	if message_id == hash("contact_point_response") then -- Kinematic/dynamic Colliders
		self.position = go.get_position() + message.normal * message.distance
		go.set_position(self.position)
	end
end

function on_input(self, action_id, action)
end

function on_reload(self)
end